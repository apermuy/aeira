<?php

use \Drupal\node\Entity\Node;
use \Drupal\taxonomy\Entity\Term;
use \Drupal\media\Entity\Media;
use \Drupal\Core\Language\Language;
use \Drupal\Core\Controller\ControllerBase;
use \Symfony\Component\DependencyInjection\ContainerInterface;
use \Drupal\Core\Extension\ModuleHandlerInterface;

/**
 * @file
 * Install, update and uninstall functions for aeira install profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function aeira_install() {
  // First, do everything in standard profile.
  include_once DRUPAL_ROOT . '/core/profiles/standard/standard.install';
  standard_install();

 
  // Engadir termos ó vocabulario tipo
  $vocabularioTipo = 'tipo';
  $categoriasTipo = ['Igrexa', 'Pazo', 'Hórreo', 'Mirador'];
  foreach ($categoriasTipo as $terminoTipo) {
    $termTipo = Term::create(array(
      'parent' => array(),
      'name' => $terminoTipo,
      'vid' => $vocabularioTipo,
    ))->save();
  }

  // Engadir termos ó vocabulario Concello
  $vocabularioConcello = 'concello';
  $categoriasConcello = ['Ares', 'Fene', 'Ferrol', 'Mugardos', 'Narón', 'Valdoviño'];
  foreach ($categoriasConcello as $termoConcello) {
    $termosConcello = Term::create(array(
      'parent' => array(),
      'name' => $termoConcello,
      'vid' => $vocabularioConcello,
     ))->save();
  }

  // Engadir termos ó vocabulario acceso
    $vocabularioAcceso = 'acceso';
    $categoriasAcceso = ['Bo', 'Moi bo', 'Malo', 'Sen clasificar'];
    foreach ($categoriasAcceso as $termoAcceso) {
      $termosAcceso = Term::create(array(
        'parent' => array(),
        'name' => $termoAcceso,
        'vid' => $vocabularioAcceso,
      ))->save();
    }

  //
  // Importar contenido demo elementos en formato geoJSON
  //
  $demoFilePath = drupal_get_path('profile', 'aeira') . '/content/demo/json/elementos.json';
  $arquivoDemoElementos = file_get_contents($demoFilePath);
  $demoElementos = json_decode($arquivoDemoElementos, true);
  array_shift($demoElementos);  
  
  foreach($demoElementos as $element => $key){
    foreach($key as $value => $data) {
     
      /*$imageUri = drupal_get_path('profile', 'aeira') . '/content/demo/images/' . $data["properties"]["img"];
      $file_data = file_get_contents($imageUri);
      $file = file_save_data($file_data, 'public://' . rand(0,99999) . '-' . $data["properties"]["img"] , 'FILE_EXISTS_REPLACE');
      $media = Media::create([
        'bundle'           => 'imaxe_elemento',
        'uid'              => 1,
        'field_media_image' => [
          'target_id' => $file->id(),
          'alt' => $data["properties"]["title"],
          'title' => $data["properties"]["title"],
        ],
      ]);*/
      //$media->setName($data["properties"]["title"])->setPublished(TRUE)->save();       
 
      $node = Node::create([
        'type'  => 'elemento',
        'langcode'  => 'gl',
        'uid'   => 1,
        'moderation_state' => 'published',
        'status' => 1,
        'title' => $data["properties"]["title"],
        //'field_imaxe_elemento' => ['target_id' => $media->id()],
      ]);
      $node->save(); 
 
      $nid = $node->id();

      $contido = Node::load($nid);
      
      //Xeolocalización
      $lon = $data["geometry"]["coordinates"][0];
      $lat = $data["geometry"]["coordinates"][1];
      $coord = [$lon,$lat];            

      $point =  Drupal::service('geofield.wkt_generator')->WktBuildPoint($coord);

      $contido->set('field_xeolocalizacion_elemento',$point);  
      $contido->set('field_tipo_elemento', rand(1,4));
      $contido->set('field_acceso_elemento',1);
      $contido->set('field_concello_elemento',1);
      $contido->set('field_codigo_elemento', 'DEMO');

      //$contido->set('field_imaxe_elemento', $media->id());

      $contido->save();   

    }
  } 

  //
  // Menu
  //
  $menu = \Drupal::entityTypeManager()->getStorage('menu_link_content')
    ->loadByProperties(['menu_name' => 'main']);
  foreach ($menu as $menu_item) {
    $parent_id = $menu_item->getParentId();
    if (!empty($parent_id)) {
      $top_level = $parent_id;
      break;
    }
  }

  $menu_link = \Drupal\menu_link_content\Entity\MenuLinkContent::create([
    'title' => 'Aeira',
    'link' => ['uri' => 'internal:/<front>'],
    'menu_name' => 'main',
    'parent' => $top_level,
    'expanded' => TRUE,
    'weight' => 0,
  ]);
  $menu_link->save();

  $menu_link = \Drupal\menu_link_content\Entity\MenuLinkContent::create([
    'title' => 'Elementos',
    'link' => ['uri' => 'internal:/elementos'],
    'menu_name' => 'main',
    'parent' => $top_level,
    'expanded' => TRUE,
    'weight' => 0,
  ]);
  $menu_link->save();

  $menu_link = \Drupal\menu_link_content\Entity\MenuLinkContent::create([
    'title' => 'Mapa',
    'link' => ['uri' => 'internal:/mapa'],
    'menu_name' => 'main',
    'parent' => $top_level,
    'expanded' => TRUE,
    'weight' => 3,
  ]);
  $menu_link->save();

  $menu_link = \Drupal\menu_link_content\Entity\MenuLinkContent::create([
    'title' => 'Contacto',
    'link' => ['uri' => 'internal:/contact/contacto_aeira'],
    'menu_name' => 'main',
    'parent' => $top_level,
      'expanded' => TRUE, 
    'weight' => 5,
  ]);
  $menu_link->save();

  // Crear contenido portada
  $node = Node::create(['type' => 'paxina']);
  $node->set('title','Páxina de inicio');
  $node->set('body', '
    <h1 class="text-center">AEira</h1>
    <p class="text-center"><b>Parabéns</b>, a instalación rematou con éxito.</p>
    <p>
      <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/23/Noche_sobre_Ferrolterra_-_panoramio.jpg/1024px-Noche_sobre_Ferrolterra_-_panoramio.jpg" class="rounded mx-auto d-block" alt="...">
    </p>
    <p class="text-center"><a href="https://commons.wikimedia.org/wiki/File:Noche_sobre_Ferrolterra_-_panoramio.jpg">Imaxe orixinal de Carrodeguas</a>
    <h6 class="text-center">Software libre para catalogación do patrimonio.</h3>
    <h6 class="text-center">Versión Ferrolterra.</h3>');
  $node->body->format = 'full';
    
  $node->set('uid', 1);
  $node->set('langcode', 'gl');
  $node->status = 1;
                
  $node->enforceIsNew();
  $node->save();
                
  $nid = $node->id();
  $path_alias = \Drupal\path_alias\Entity\PathAlias::create([
    'path' => '/node/' . $nid,
    'alias' => '/front',
  ]);            
  $path_alias->save();  
} 